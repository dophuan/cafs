name: Test Docker Compose

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  test-docker-compose:
    runs-on: ubuntu-latest
    env:
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      STACK_NAME: ${{ secrets.STACK_NAME }}
      # DOMAIN: ${{ secrets.DOMAIN }}
      DOCKER_IMAGE_BACKEND: ${{ secrets.DOCKER_IMAGE_BACKEND }}
      DOCKER_IMAGE_FRONTEND: ${{ secrets.DOCKER_IMAGE_FRONTEND }}
      # FRONTEND_HOST: ${{ secrets.FRONTEND_HOST }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      FIRST_SUPERUSER: ${{ secrets.FIRST_SUPERUSER }}
      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}
      BACKEND_CORS_ORIGINS: ${{ secrets.BACKEND_CORS_ORIGINS }}
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create traefik network
        run: docker network create traefik-public || true
        
      - name: Build containers
        run: docker compose build

      - name: Remove old containers
        run: docker compose down -v --remove-orphans

      - name: Start services
        run: docker compose up -d --wait backend frontend adminer

      - name: Test backend is up
        run: curl http://localhost:8000/api/v1/utils/health-check

      - name: Test frontend is up
        run: curl http://localhost:5173

      - name: Show logs on failure
        if: failure()
        run: |
          docker compose logs backend
          docker compose logs frontend
          docker compose logs adminer

      - name: Cleanup
        if: always()
        run: docker compose down -v --remove-orphans